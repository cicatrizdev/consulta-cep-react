{"version":3,"sources":["API_KEY.ts","components/Button/Button.tsx","components/InputField/InputField.tsx","components/SearchForm/SearchForm.tsx","pages/Template.tsx","pages/App.tsx","index.tsx","services/address.ts","contexts/store.tsx"],"names":["API_KEY","ButtonWrapper","styled","button","Button","InputFieldWrapper","InputMask","InputField","props","omit","mask","onChange","e","target","value","data-testid","placeholder","required","SearchFormContainerWrapper","form","SearchFormFieldWrapperLabel","div","SearchBar","LabelWrapper","label","SearchFormContainer","context","useContext","Store","useState","zipCode","setZipCode","onSubmit","a","preventDefault","action","fetchAddress","htmlFor","id","AppWrapper","Title","h1","MapContainer","lazy","Template","SearchForm","fallback","AppPage","ReactDOM","render","App","document","getElementById","fetchAddressByZipCode","fetch","address","json","addressJSON","erro","Error","fetchMapCoordinates","addresQueryString","cep","localidade","logradouro","mapsCoordinates","mapsCoordinatesJSON","get","createContext","initialState","status","reducer","state","type","payload","StoreProvider","useReducer","dispatch","addressData","resetState","useAddress","Provider","children"],"mappings":"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","file":"static/js/main.762ff954.chunk.js","sourcesContent":["const API_KEY = 'AIzaSyCZTrU7Aiu986D32m4yyPWvA2iwJiyYFX4'\n\nexport default API_KEY","import React from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.button`\n  border-radius: 5px;\n  border: 0.5px #cfcfcf;\n  background: #9e9e9e;\n  color: black;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: .35rem 1rem;\n  \n  &:hover {\n    border: 1px solid #cfcfcf;\n  }\n`\n\nconst Button = () =>\n  <ButtonWrapper>\n    Buscar\n  </ButtonWrapper>\n\nexport default Button;\n","import React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport InputMask from 'react-input-mask'\nimport { omit } from 'lodash'\n\ninterface IInputField {\n  id: string\n  onChange: any\n  value: string\n}\n\nconst InputFieldWrapper = styled(InputMask)`\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  box-shadow: 0;\n  font-size: 1rem;\n  padding: 5px 10px;\n`\n\nconst InputField = (props: IInputField) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value)\n  }\n\n  return (\n    <InputFieldWrapper\n      {...omit(props, 'onChange')}\n      mask='99999-999'\n      onChange={onChange}\n      data-testid='search-field'\n      placeholder='01234-567'\n      required\n    />\n  )\n}\n\nexport default InputField\n","import React, { FormEvent, useState, useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { Store } from '../../contexts/store'\nimport Button from '../Button/Button'\nimport InputField from '../InputField/InputField'\n\nconst SearchFormContainerWrapper = styled.form`\n  background: #0d47a1;\n  box-sizing: border-box;\n  padding: 2rem 2rem 4rem;\n  width: 100%;\n  color: white;\n`\n\nconst SearchFormFieldWrapperLabel = styled.div`\n  font-weight: 600;\n  margin-bottom: 2rem;\n`\n\nconst SearchBar = styled.div`\n  display: flex;\n`\n\nconst LabelWrapper = styled.label`\n  > * {\n    margin-right: 1rem;\n  }\n`\n\nconst SearchFormContainer = () => {\n  const context = useContext(Store)\n  const [zipCode, setZipCode] = useState('')\n\n  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    if (!zipCode) return\n\n    await context.action.fetchAddress(zipCode)\n  }\n\n  return (\n    <SearchFormContainerWrapper onSubmit={onSubmit} data-testid='form-search-container'>\n      <SearchFormFieldWrapperLabel>Consultar</SearchFormFieldWrapperLabel>\n      <SearchBar>\n        <LabelWrapper htmlFor=\"search-field\">\n          <span>CEP</span>\n          <InputField id=\"search-field\" value={zipCode} onChange={setZipCode} />\n        </LabelWrapper>\n        <Button />\n      </SearchBar>\n    </SearchFormContainerWrapper>\n  )\n}\n\nexport default SearchFormContainer\n","import React, { lazy, Suspense } from 'react'\nimport styled from 'styled-components'\n\nimport SearchForm from '../components/SearchForm/SearchForm'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: arial;\n`\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin-block: 0;\n  font-weight: bold;\n  padding: 2rem 0;\n  background: #002171;\n  height: 100%\n  color: white;\n  padding-inline: 2rem;\n`\n\nconst MapContainer = lazy(() => import('../components/Map/MapContainer/MapContainer'))\n\nconst Template = () =>\n  <AppWrapper>\n    <Title>Consulta de CEP</Title>\n    <SearchForm />\n    <Suspense fallback={<div>Carregando informações...</div>}>\n      <MapContainer />\n    </Suspense>\n  </AppWrapper>\n\nexport default Template\n","import React from 'react'\n\nimport Template from './Template'\nimport { StoreProvider } from '../contexts/store'\n\nconst AppPage = () =>\n  <StoreProvider>\n    <Template />\n  </StoreProvider>\n\nexport default AppPage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './pages/App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n","import { get } from 'lodash'\nimport API_KEY from '../API_KEY'\n\nimport { IAddress } from '../interfaces'\n\nexport const fetchAddressByZipCode = async (zipCode: string) => {\n  const address = await fetch(`https://viacep.com.br/ws/${zipCode}/json`)\n  const addressJSON = await address.json()\n\n  if (addressJSON.erro) throw new Error()\n\n  return addressJSON\n}\n\nexport const fetchMapCoordinates = async (address: IAddress) => {\n  const addresQueryString = `${address.cep} ${address.localidade}  ${address.logradouro}`\n\n  const mapsCoordinates = await fetch(\n    `https://maps.googleapis.com/maps/api/geocode/json?address=${addresQueryString}&key=${API_KEY}`\n  )\n  const mapsCoordinatesJSON = await mapsCoordinates.json()\n\n  return get(mapsCoordinatesJSON, 'results[0].geometry.location', {})\n}\n","import React, { createContext, useReducer } from 'react'\n\nimport {\n  IState,\n  IContextProps,\n  Actions\n} from '../interfaces'\nimport { fetchAddressByZipCode, fetchMapCoordinates } from '../services/address'\n\nexport const Store = createContext({} as IContextProps)\n\nconst initialState: IState = {\n  address: {},\n  status: ''\n}\n\nconst reducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_ADDRESS':\n      return { ...state, address: action.payload, status: 'LOADED' }\n    case 'FETCH_ADDRESS_FAIL':\n      return { ...state, address: {}, status: 'ERROR' }\n    case 'ADDRESS_RESET': {\n      return { ...state, address: {}, status: '' }\n    }\n    default:\n      return state\n  }\n}\n\nexport const useAddress = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const fetchAddress = async (zipCode: string) => {\n    try {\n      const addressData = await fetchAddressByZipCode(zipCode)\n      const mapsCoordinates = await fetchMapCoordinates(addressData)\n\n      return dispatch({\n        type: 'FETCH_ADDRESS',\n        payload: { ...addressData, mapsCoordinates }\n      })\n    } catch (e) {\n      return dispatch({\n        type: 'FETCH_ADDRESS_FAIL'\n      })\n    }\n  }\n\n  const resetState = () =>\n    dispatch({\n      type: 'ADDRESS_RESET'\n    })\n\n  return [state, { fetchAddress, resetState }]\n}\n\nexport const StoreProvider = (props: any) => {\n  const [state, action] = useAddress()\n\n  return (\n    <Store.Provider value={{ state, action }}>\n      {props.children}\n    </Store.Provider>\n  )\n}\n"],"sourceRoot":""}