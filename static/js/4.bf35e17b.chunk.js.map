{"version":3,"sources":["components/Map/MapComponent/images/marker.svg","components/Map/MapComponent/MapComponent.tsx","components/Map/MapContainer/MapContainer.tsx"],"names":["module","exports","MapWrapper","styled","div","MarkerWrapper","Marker","memo","props","children","Map","bootstrapURLKeys","key","API_KEY","defaultCenter","lat","lng","center","coordinates","defaultZoom","src","marker","alt","MapContainerWrapper","AddressWrapper","Street","h2","MapContainer","state","useContext","Store","console","log","status","includes","address","logradouro","bairro","localidade","uf","cep","MapComponent","mapsCoordinates"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,oC,2UCY3C,IAAMC,EAAaC,IAAOC,IAAV,KAKVC,EAAgBF,IAAOC,IAAV,KAKbE,EAASC,gBAAK,SAACC,GAAD,OAClB,kBAACH,EAAD,KACGG,EAAMC,aAkBIC,EAdH,SAACF,GAAD,OACV,kBAACN,EAAD,KACE,kBAAC,IAAD,CACES,iBAAkB,CAAEC,IAAKC,KACzBC,cAAe,CAAEC,KAAM,KAAMC,KAAM,IACnCC,OAAQT,EAAMU,YACdC,YAAa,IAEb,kBAACb,EAAWE,EAAMU,YAChB,yBAAKE,IAAKC,IAAQC,IAAI,e,8bC/B9B,IAAMC,EAAsBpB,IAAOC,IAAV,KAQnBoB,EAAiBrB,IAAOC,IAAV,KAQdqB,EAAStB,IAAOuB,GAAV,KAmCGC,UA9BM,WAAO,IAClBC,EAAUC,qBAAWC,KAArBF,MAmBR,OADAG,QAAQC,IAAI,WAAYJ,EAAMK,QACzB,CAAC,SAAU,SAASC,SAASN,EAAMK,QAGtC,kBAACV,EAAD,KAnBqB,UAAjBK,EAAMK,OAA2B,uDAGnC,kBAAC,WAAD,KACE,kBAACT,EAAD,KACE,kBAACC,EAAD,KAASG,EAAMO,QAAQC,YACvB,sCAAYR,EAAMO,QAAQE,QAC1B,yCAAeT,EAAMO,QAAQG,WAA7B,MAA4CV,EAAMO,QAAQI,IAC1D,mCAASX,EAAMO,QAAQK,MAGzB,kBAACC,EAAD,CAAcvB,YAAaU,EAAMO,QAAQO,oBAKS","file":"static/js/4.bf35e17b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.56fef3db.svg\";","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport GoogleMapReact, { Coords } from 'google-map-react'\n\nimport API_KEY from '../../../API_KEY'\n\nimport marker from './images/marker.svg'\n\ninterface IMap {\n  coordinates?: Coords\n}\n\nconst MapWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n`\n\nconst MarkerWrapper = styled.div`\n  height: 2rem;\n  width: 2rem;\n`\n\nconst Marker = memo((props: any) =>\n  <MarkerWrapper>\n    {props.children}\n  </MarkerWrapper>\n)\n\nconst Map = (props: IMap) =>\n  <MapWrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: API_KEY }}\n      defaultCenter={{ lat: -15.5, lng: -57 }}\n      center={props.coordinates}\n      defaultZoom={15}\n    >\n      <Marker {...props.coordinates}>\n        <img src={marker} alt=\"marker\" />\n      </Marker>\n    </GoogleMapReact>\n  </MapWrapper>\n\nexport default Map\n","import React, { Fragment, useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { Store } from '../../../contexts/store'\nimport MapComponent from '../MapComponent/MapComponent'\n\nconst MapContainerWrapper = styled.div`\n  border: 2px solid gainsboro;\n  box-sizing: border-box;\n  margin-top: 1rem;\n  padding: 3rem;\n  position: relative;\n`\n\nconst AddressWrapper = styled.div`\n  margin-bottom: 2rem;\n\n  > * {\n    margin-bottom: 1rem;  \n  }\n`\n\nconst Street = styled.h2`\n  font-size: 1.5rem;\n  font-weight: bold;\n`\n\nconst MapContainer = () => {\n  const { state } = useContext(Store)\n\n  const shouldShowMap = () => {\n    if (state.status === 'ERROR') return <div>CEP n√£o encontrado!</div>\n\n    return (\n      <Fragment>\n        <AddressWrapper>\n          <Street>{state.address.logradouro}</Street>\n          <p>Bairro: {state.address.bairro}</p>\n          <p>Cidade/UF: {state.address.localidade} - {state.address.uf}</p>\n          <p>CEP: {state.address.cep}</p>\n        </AddressWrapper>\n\n        <MapComponent coordinates={state.address.mapsCoordinates} />\n      </Fragment>\n    )\n  }\n  console.log('Status: ', state.status)\n  if (!['LOADED', 'ERROR'].includes(state.status)) return null\n\n  return (\n    <MapContainerWrapper >\n      {shouldShowMap()}\n    </MapContainerWrapper>\n  )\n}\n\n\nexport default MapContainer\n"],"sourceRoot":""}